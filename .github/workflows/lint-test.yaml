name: Lint and Test Charts

on:
  workflow_call:
    inputs:
      ct_configfile:
        description: location of the ct config file
        default: ct.yaml
        required: false
        type: string
      ct_check_version_increment:
        description: whether to check for version bump requirement
        default: true
        required: false
        type: boolean
      helm_version:
        description: version of the helm binary
        default: v3.8.2
        required: false
        type: string
      chart_testing_action_version:
        description: version of the chart testing action binary
        default: v3.3.0
        required: false
        type: string

env:
  CT_CONFIGFILE: ${{ inputs.ct_configfile }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        kubernetes_version:
          - "kindest/node:v1.22.1"
          - "kindest/node:v1.21.2"
          - "kindest/node:v1.20.7"
          - "kindest/node:v1.19.11"
          - "kindest/node:v1.18.19"
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.3
        with:
          version: ${{ inputs.helm_version }}

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.0
        with:
          version: ${{ inputs.chart_testing_action_version }}

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config "${CT_CONFIGFILE}" --check-version-increment=${{ inputs.ct_check_version_increment }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          node_image: ${{ matrix.kubernetes_version }}

      - name: Run chart-testing (install)
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ "$changed" == "charts/enterprise-metrics" ]]; then
            # Do not run `ct install` for enterprise-metrics
            exit 0
          fi
          ct install --config "${CT_CONFIGFILE}"
